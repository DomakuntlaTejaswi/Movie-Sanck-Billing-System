#include<stdio.h>
#include<string.h>
#include<stdlib.h>

struct stock {
    int p_stock, b_stock, f_stock, c_stock;
} g;

struct customer {
    char name[100];
} f;

struct bill {
    char name[50];
    int qty1;
    int qty2;
    int qty3;
    int qty4;
    int P_price;
    int B_price;
    int F_price;
    int C_price;
    float net_price;
} s;

void update_stock() {
    printf("Enter new stock quantities:\n");
    printf("Popcorn stock: ");
    scanf("%d", &g.p_stock);
    printf("Beverage stock: ");
    scanf("%d", &g.b_stock);
    printf("Fries stock: ");
    scanf("%d", &g.f_stock);
    printf("Coffee stock: ");
    scanf("%d", &g.c_stock);
    printf("Stock updated successfully!\n\n");
}

void view_stock() {
    printf("\n===== CURRENT STOCK =====\n");
    printf("Popcorn: %d\n", g.p_stock);
    printf("Beverage: %d\n", g.b_stock);
    printf("Fries: %d\n", g.f_stock);
    printf("Coffee: %d\n", g.c_stock);
    printf("=========================\n\n");
}

struct bill popcorn(struct bill s) {
    int size1, i, price = 0;
    printf("Enter no. of popcorn items: ");
    scanf("%d", &s.qty1);
    for(i = 0; i < s.qty1; i++) {
        printf("Enter size of popcorn %d (1=Small, 2=Medium, 3=Large): ", i + 1);
        scanf("%d", &size1);
        if(size1 == 1) price += 50;
        else if(size1 == 2) price += 80;
        else if(size1 == 3) price += 100;
    }
    s.P_price = price + (price * 0.18);
    g.p_stock -= s.qty1;
    return s;
}

struct bill beverage(struct bill s) {
    printf("Enter no. of beverages: ");
    scanf("%d", &s.qty2);
    s.B_price = (s.qty2 * 40) + (s.qty2 * 40 * 0.18);
    g.b_stock -= s.qty2;
    return s;
}

struct bill fries(struct bill s) {
    printf("Enter no. of fries: ");
    scanf("%d", &s.qty3);
    s.F_price = (s.qty3 * 60) + (s.qty3 * 60 * 0.18);
    g.f_stock -= s.qty3;
    return s;
}

struct bill coffee(struct bill s) {
    printf("Enter no. of coffees: ");
    scanf("%d", &s.qty4);
    s.C_price = (s.qty4 * 70) + (s.qty4 * 70 * 0.18);
    g.c_stock -= s.qty4;
    return s;
}

void bill_display(struct bill s, struct customer f) {
    printf("\n================ FINAL BILL ================\n");
    printf("Customer Name: %s\n", f.name);
    if (s.qty1 > 0) printf("Popcorn Total: %d\n", s.P_price);
    if (s.qty2 > 0) printf("Beverage Total: %d\n", s.B_price);
    if (s.qty3 > 0) printf("Fries Total: %d\n", s.F_price);
    if (s.qty4 > 0) printf("Coffee Total: %d\n", s.C_price);
    printf("------------------------------------------\n");
    s.net_price = s.P_price + s.B_price + s.F_price + s.C_price;
    printf("Net Payable: %.2f\n", s.net_price);
    printf("==========================================\n");
}

int main() {
    int option, sub_option;
    while(1) {
        printf("\n===== MOVIE SNACK BILLING SYSTEM =====\n");
        printf("1. Stock Management\n");
        printf("2. Billing\n");
        printf("3. Exit\n");
        printf("Choose an option: ");
        scanf("%d", &option);

        switch(option) {
            case 1:
                printf("\n1. View Stock\n2. Update Stock\nChoose: ");
                scanf("%d", &sub_option);
                if(sub_option == 1) view_stock();
                else if(sub_option == 2) update_stock();
                else printf("Invalid input!\n");
                break;

            case 2:
                printf("Enter customer name: ");
                scanf("%s", f.name);
                printf("\nSelect items to bill:\n");
                printf("1. Popcorn\n2. Beverage\n3. Fries\n4. Coffee\n5. Done\n");
                while(1) {
                    printf("Choose item (1-5): ");
                    scanf("%d", &sub_option);
                    if(sub_option == 1) s = popcorn(s);
                    else if(sub_option == 2) s = beverage(s);
                    else if(sub_option == 3) s = fries(s);
                    else if(sub_option == 4) s = coffee(s);
                    else if(sub_option == 5) break;
                    else printf("Invalid item choice!\n");
                }
                bill_display(s, f);
                break;

            case 3:
                exit(0);

            default:
                printf("Invalid option. Try again.\n");
        }
    }
    return 0;
}
